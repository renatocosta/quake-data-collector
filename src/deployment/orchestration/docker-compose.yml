version: '3.3'

services:

#### Redis Container #########################################
    redis:
      container_name: dev-redis
      image: redis:latest
      volumes:
        - redis:/data
      networks:
        - backend


### Nginx Server Container ##################################
    nginx:
      container_name: rexweb-nginx
      image: 331057292956.dkr.ecr.eu-west-2.amazonaws.com/core/nginx:1.11.10
      volumes:
        - ${PROJECT_ROOT_PATH}/src:/var/www:delegated
      env_file:
        - .env
      ports:
          - "80:80"
          - "443:443"
      networks:
          - frontend
          - backend
      depends_on:
          - php-fpm


### PHP-FPM Container #######################################
    php-fpm:
      container_name: rexweb-phpfpm
      image: 331057292956.dkr.ecr.eu-west-2.amazonaws.com/core/phpfpm:7.4.13
      volumes:
        - ${PROJECT_ROOT_PATH}/src:/var/www:delegated
        - storage:${PROJECT_ROOT_PATH}/src/storage:delegated
        - minio:/data
        - tmp:/tmp
      env_file:
        - .env
      networks:
        - backend


#### PHP-FPM with Cron running #######################################
    php-scheduler:
      container_name: rexweb-scheduler
      image: 331057292956.dkr.ecr.eu-west-2.amazonaws.com/core/phpfpm:7.4.13
      volumes:
        - ${PROJECT_ROOT_PATH}/src:/var/www:delegated
        - storage:${PROJECT_ROOT_PATH}/src/storage:delegated
      env_file:
        - .env
      networks:
        - backend
      command: bash -c "crontab -l | { cat; echo '* * * * * /usr/local/bin/php /var/www/artisan schedule:run >> /dev/null 2>&1'; } | crontab - && crond -f"


### PHP-FPM MQ Consumer #######################################
    php-queue-consumer:
      container_name: rexweb-queue-consumer
      image: 331057292956.dkr.ecr.eu-west-2.amazonaws.com/core/phpfpm:7.4.13
      volumes:
        - ${PROJECT_ROOT_PATH}/src:/var/www:delegated
        - storage:${PROJECT_ROOT_PATH}/src/storage:delegated
        - tmp:/tmp
      env_file:
        - .env
      networks:
        - backend
      depends_on:
        - mq
      command: php /var/www/artisan queue:work --queue=general,commands,notifications --sleep=3 --tries=3 --daemon


#### RabbitMQ Container ###########################
    mq:
      container_name: rexweb-mq
      image: rabbitmq:management-alpine
      ports:
          - "15672:15672"
          - "15671:15671"
      environment:
          - RABBITMQ_DEFAULT_USER_FILE=/run/secrets/rabbit_user
          - RABBITMQ_DEFAULT_PASS_FILE=/run/secrets/rabbit_pass
      networks:
        - backend
      secrets:
          - rabbit_user
          - rabbit_pass


#### PGSQL Container #########################################
    postgres:
      container_name: dev-postgres
      image: postgres:9.6.6-alpine
      environment:
        - POSTGRES_DB_FILE=/run/secrets/pgsql_db
        - POSTGRES_PASSWORD_FILE=/run/secrets/pgsql_pass
      secrets:
        - pgsql_db
        - pgsql_pass
      volumes:
        - pgdata:/var/lib/postgresql/data:cached
      env_file:
        - .env
      ports:
        - "5432:5432"
      networks:
        - backend


  #### Minio (file storage) #########################################
    minio:
      container_name: dev-minio
      image: minio/minio
      env_file:
        - minio.env
      environment:
        - MINIO_HTTP_TRACE=/tmp/minio.log
      volumes:
        - minio:/shared/nasvol:delegated
        - minio-config:/root/.minio:delegated
      ports:
        - "9005:9005"
      expose:
        - 9005
      networks:
        - backend
      command: gateway nas /shared/nasvol --address 0.0.0.0:9005
  #

    create-minio-bucket:
      container_name: create-minio-bucket
      image: minio/mc
      depends_on:
        - minio
      env_file:
        - minio.env
      entrypoint: >
        /bin/sh -c "
        /usr/bin/mc config host add myminio http://minio:9005 $$MINIO_ACCESS_KEY $$MINIO_SECRET_KEY;
        /usr/bin/mc mb myminio/proprli-terminal-development;
        /usr/bin/mc policy download myminio/proprli-terminal-development;
        exit 0;
        "


  ### Mail Server (smtp port: 1025) ###############################################
    mail:
      image: mailhog/mailhog
      ports:
        - 8025:8025 # web ui
      networks:
        - backend


### Networks Setup ############################################

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"


### Volumes Setup #############################################

volumes:
    redis:
      driver: "local"
    pgdata:
      driver: "local"
    storage:
      driver: "local"
    tmp:
      driver: "local"
    minio:
      driver: "local"
    minio-config:
      driver: "local"


### Secrets Setup #############################################

secrets:
    rabbit_user:
      file: ./dev_secrets/rabbit_user.txt
    rabbit_pass:
      file: ./dev_secrets/rabbit_pass.txt
    pgsql_db:
      file: ./dev_secrets/pgsql_db.txt
    pgsql_pass:
      file: ./dev_secrets/pgsql_pass.txt
